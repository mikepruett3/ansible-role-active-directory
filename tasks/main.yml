---
# tasks file for ansible-role-active-directory/

# Based on findings from the following guides:
#   - https://ubuntu.com/server/docs/service-sssd
#   - https://access.redhat.com/articles/216933
#   - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/windows_integration_guide/index
#   - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/integrating_rhel_systems_directly_with_windows_active_directory

- name: "Include OS-specific variables"
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yaml"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: "Install Kerberos tools package"
  ansible.builtin.package:
    name: "{{ krb_package }}"
    state: present

- name: "Install Realm Daemon package"
  ansible.builtin.package:
    name: "{{ realmd_package }}"
    state: present

- name: "Discover required packages to join active directory domain"
  ansible.builtin.shell: realm discover {{ service_domain }} | grep "required-package:" | awk '{ print $2}'
  register: required_packages

- name: "Set required_packages facts"
  ansible.builtin.set_fact:
    required_packages: "{{ required_packages.stdout_lines | list }}"

- name: "Install packages from required_packages discovery"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ required_packages }}"

- name: "Check if host is already joined to the active directory domain"
  ansible.builtin.shell: realm -v list
  register: ad_check

- name: "Obtain Kerberos Ticket for Service Account"
  ansible.builtin.shell: echo -n "{{ service_password }}" | kinit {{ service_account }}@{{ service_domain.upper() }}
  when: ad_check.stderr | length != 0

# https://access.redhat.com/solutions/5592351
# Fully-Qualified Username must, the domain must be in CAPS
- name: "Join host to the active directory domain"
  ansible.builtin.shell: echo -n "{{ service_password }}" |realm join -v -U {{ service_account }}@{{ service_domain.upper() }} --computer-ou='{{ ou }}' {{ service_domain }}
  when: ad_check.stderr | length != 0

- name: "Update pamd auth to create homedirs for new active directory users"
  ansible.builtin.shell: pam-auth-update --enable mkhomedir
  when:
    - ad_check.stderr | length != 0
    - ansible_os_family == "Debian"

# https://web.mit.edu/kerberos/krb5-1.12/doc/admin/conf_files/krb5_conf.html#realms
#- name: "Update krb5.conf to enable DNS loookup realm setting"
#  ansible.builtin.lineinfile:
#    path: "{{ krb5_conf }}"
#    insertbefore: "^    dns_lookup_realm = false"
#    line: "    dns_lookup_kdc = true"
#    state: present
#    backup: yes

# https://access.redhat.com/solutions/3905181
# Disable Dynamic DNS Updates
#- name: "Update sssd.conf to disable Dynamic DNS updates"
#  ansible.builtin.lineinfile:
#    path: "{{ sssd_conf }}"
#    insertafter: EOF
#    line: "{{ item }}"
#    state: present
#    backup: yes
#  with_items:
#    - "dyndns_auth = none"
#    - "subdomains_provider = none"

# https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/integrating_rhel_systems_directly_with_windows_active_directory/connecting-rhel-systems-directly-to-ad-using-sssd_integrating-rhel-systems-directly-with-active-directory
# Remove the SSSD caches
#- name: "Remove the SSSD caches"
#  ansible.builtin.shell: rm -f /var/lib/sss/db/*

#- name: "Restart SSSD Daemon"
#  ansible.builtin.service:
#    name: "{{ sssd_service }}"
#    state: restarted

